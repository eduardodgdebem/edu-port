---
import TypingHeading from "../components/TypingHeading";
const headings = [
  "Developer",
  "Front end",
  "Traveler",
  "Problem solver",
];
---

<main
  class="relative overflow-hidden flex flex-wrap-reverse justify-center object-center center gap-4 bg-gray border-2 border-vanila-dark rounded-lg text-vanila-bright shadow-inner hover:border-purple duration-300"
>
  <div class="p-8 z-10">
    <TypingHeading headings={headings} className="text-4xl text-[white] font-bold" client:load />
    <p class="max-w-lg m-[auto_0] font-normal text-lg text-vanila-bright">
      Nice to meet you! I'm Eduardo. Right after high school, I dove into
      programming and found my passion. Since then, I've been continuously
      improving my skills and expanding my knowledge. Crafting remarkable
      experiences through development is what drives me. I'm dedicated to
      achieving excellence, embracing challenges with focus, and I'm always
      eager to explore and learn more.
    </p>
  </div>
  <div class="absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] blur-3xl rounded-[50%] w-[70%] aspect-square bg-[#ffffff2a] "></div>
</main>
<!-- 
<script>
  const boundElement = document.getElementById("about-me-main");
  const imgWraperElement = document.getElementById("profile-img");

  const onMoveFunc = (e: MouseEvent) => {
    const mouseX = e.clientX;
    const mouseY = e.clientY;
    if (!imgWraperElement?.clientWidth || !imgWraperElement?.clientWidth || !imgWraperElement)
      return;
    const {
      x,
      y,
      height: imageHeight,
      width: imageWidth,
    } = imgWraperElement.getBoundingClientRect();
    const middleX = imageWidth / 2 + x;
    const middleY = imageHeight / 2 + y;

    const maxAngle = 25;

    let offsetX = ((mouseX - middleX) / middleX) * maxAngle;
    let offsetY = ((mouseY - middleY) / middleY) * maxAngle;

    if (offsetX > maxAngle) offsetX = maxAngle;
    if (offsetY > maxAngle) offsetY = maxAngle;

    imgWraperElement.style.setProperty("--rotateX", -offsetY + "deg");
    imgWraperElement.style.setProperty("--rotateY", offsetX + "deg");
  };

  boundElement?.addEventListener("mouseenter", (e) => {
    boundElement.addEventListener("mousemove", onMoveFunc);
  });
  boundElement?.addEventListener("mouseleave", (e) => {
    boundElement.removeEventListener("mousemove", onMoveFunc);
  });
</script>

<style>
  #profile-img {
    --rotateX: 10deg;
    --rotateY: -10deg;

    position: relative;
    transform-style: preserve-3d;
    transform: perspective(1000px) rotateX(var(--rotateX))
      rotateY(var(--rotateY));
  }

  #profile-img::before,
  #profile-img::after {
    content: "";
    position: absolute;
    border-radius: inherit;
  }

  #profile-img::before {
    inset: 0.75rem;
    border-radius: inherit;
    background: white;
    z-index: -1;
    transform: translateZ(-50px);
    filter: blur(15px);
    opacity: 0.5;
  }

  #profile-img::after {
    z-index: -2;
    inset: -0.5rem;
    background-color: #3d424f;
    transform: translateZ(-50px);
    transition: 300ms;
  }

  #about-me-main:hover #profile-img::after {
    background-color: #59eb15
  }
</style> -->
